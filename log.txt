28 Jan 2021:
Thought about storing class information in nested dictionaries.
This wouldnâ€™t scale as I'd like, so I am now considering using a 
hash table to simply map fields to place in array -> this way, if any 
new fields were to be added, we could simply add on to the hash table.
We could add on to the hash table every time. I considered keeping 
fields in an array and doing .index(.find('field')) every time, but if 
we mix up orders, it could get messy again -> I'll just use a hash table.

29 Jan 2021:
Successfully implemented MatFileReader class and have it display file 
properties/variables. Created Plotter Classes to help plot both tasmax 
and pr files. Everything seems to be working correctly.
Up next: messing with the HDDCDD files

01 Feb 2021:
Learned something new about constructors. Ex:
class A:
    def __init__(self) -> None:
        print("a made")
        self.cook()
    def cook(self):
        print("A cook")

class B(A):
    def __init__(self) -> None:
        super().__init__()
        print("b made")
    def cook(self):
        print("B cook")

b = B() 
''' 
    this prints out A made -> B cook -> B made
    *so parent constructors will call children's methods instead 
    of thier own if the constructor was called by child!
''' 
Discovered this while creating HDDCDDReader class and calling __setup()